<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax-details" order="8">

<css lib="datatables select"/>
<js lib="jquery datatables select"/>

<js>
<![CDATA[
var table = $('#example').DataTable({
	ajax: '../../../../examples/ajax/data/objects.txt',
	columns: [
		{
			data: null,
			render: DataTable.render.select(),
		},
		{ data: 'name' },
		{ data: 'position' },
		{ data: 'office' },
		{ data: 'salary' }
	],
	select: {
		style: 'multi',
		selector: 'td:first-child',
		headerCheckbox: 'select-page'
	}
});

]]>
</js>

<js-vanilla>
<![CDATA[
new DataTable('#example', {
	ajax: '../../../../examples/ajax/data/objects.txt',
	columns: [
		{
			data: null,
			render: DataTable.render.select()
		},
		{ data: 'name' },
		{ data: 'position' },
		{ data: 'office' },
		{ data: 'salary' }
	],
	select: {
		style: 'multi',
		selector: 'td:first-child',
		headerCheckbox: 'select-page'
	}
});

]]>
</js-vanilla>

<title>Ajax data with current page selection</title>

<info><![CDATA[

This example shows the checkbox selection option being used with Ajax loaded data and header checkbox with only current page selection. Nothing fancy, it just works as normal!

]]></info>

</dt-example>
