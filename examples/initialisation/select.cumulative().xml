<?xml version="1.0" encoding="UTF-8" ?>
<dt-api library="Select">
	<name>select.cumulative()</name>
	<summary>Get a list of selected row ids across pages (server-side processing)</summary>
	<since>2.1.0</since>

	<type type="function">
		<signature>select.cumulative()</signature>
		<returns type="string[]">
			A list of IDs for the rows that are selected.
		</returns>
		<description>
			Get a list of IDs for rows that are selected regardless of paging (for use with server-side processing).
		</description>
	</type>

	<description>
		When server-side processing is enabled (`-init serverSide`) DataTables only has knowledge of the rows that are currently shown. That might be only a fraction of the total number of rows in the table, since of course the whole point of server-side processing is to speed things up when working with large data sets.

		As a result Select can only perform selection on rows that are displayed at the client-side. However, Select (as of v2.1.0) will retain a list of all rows that are selected, both reselecting them when they are displayed again, but also providing the list of selected rows (regardless of paging or filtering) using this method.

		For this to work each row needs to be uniquely addressable via a given data point - typically and id / primary key value. Use `-init rowId` to tell DataTables where that value can be found. The values returned by this method will contain these ids.

		When operating with these ids, it is important that you validate that the id still exists when performing an action on it. This is because a row might be deleted, but Select might not be aware of this fact and retain it in its list.
	</description>

	<example title="Get a list of ids on button press"><![CDATA[
new DataTable('#example', {
	ajax: '/api/data',
	columns: [
		{ data: 'first_name' },
		{ data: 'last_name' },
		{ data: 'position' },
		{ data: 'office' },
		{ data: 'start_date' },
		{ data: 'salary' }
	],
	layout: {
		topStart: {
			buttons: [
				'pageLength',
				{
					text: 'View selected ids',
					action: function (e, dt) {
						alert(
							'Information about selected rows: '+
							JSON.stringify(dt.select.cumulative())
						);
					}
				},
				'selectAll',
				'selectNone'
			]
		}
	},
	processing: true,
	select: true,
	serverSide: true
});
]]></example>

	<related>-init rowId</related>
	<related>-init select.headerCheckbox</related>
</dt-api>
